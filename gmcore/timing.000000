GPTL version info: 8.1.1
GPTL was built without threading
HAVE_LIBMPI was true
  ENABLE_PMPI was true
HAVE_PAPI was false
ENABLE_NESTEDOMP was false
Autoprofiling capability was enabled with backtrace
Underlying timing routine was gettimeofday.
GPTLget_overhead: using hash entry 34=calc_coriolis for getentry estimate
Total overhead of 1 GPTL start or GPTLstop call=1.25e-07 seconds
Components are as follows:
Fortran layer:             0.0e+00 =   0.0% of total
Get thread number:         2.3e-08 =  18.4% of total
Generate hash index:       1.9e-08 =  15.2% of total
Find hashtable entry:      2.3e-08 =  18.4% of total
Underlying timing routine: 5.7e-08 =  45.6% of total
Misc start/stop functions: 3.0e-09 =   2.4% of total

Overhead of backtrace (invoked once per auto-instrumented start entry)=7.614e-06 seconds
NOTE: If GPTL is called from C not Fortran, the 'Fortran layer' overhead is zero
NOTE: For calls to GPTLstart_handle()/GPTLstop_handle(), the 'Generate hash index' overhead is zero
NOTE: For auto-instrumented calls, the cost of generating the hash index plus finding
      the hashtable entry is 1.0e-09 not the 4.2e-08 portion taken by GPTLstart
NOTE: Each hash collision roughly doubles the 'Find hashtable entry' cost of that timer

If overhead stats are printed, they are the columns labeled self_OH and parent_OH
self_OH is estimated as 2X the Fortran layer cost (start+stop) plust the cost of 
a single call to the underlying timing routine.
parent_OH is the overhead for the named timer which is subsumed into its parent.
It is estimated as the cost of a single GPTLstart()/GPTLstop() pair.
Print method was most_frequent.

If a AVG_MPI_BYTES field is present, it is an estimate of the per-call
average number of bytes handled by that process.
If timers beginning with sync_ are present, it means MPI synchronization was turned on.

If a '%_of' field is present, it is w.r.t. the first timer for thread 0.
If a 'e6_per_sec' field is present, it is in millions of PAPI counts per sec.

A '*' in column 1 below means the timer had multiple parents, though the values
printed are for all calls. Multiple parent stats appear later in the file in the
section titled 'Multiple parent info'
A '!' in column 1 means the timer is currently ON and the printed timings are only
valid as of the previous GPTLstop. '!' overrides '*' if the region had multiple
parents and was currently ON.

Process size=3365.335938 MB rss=124.312500 MB

Stats for thread 0:
                                 Called  Recurse     Wall      max      min AVG_MPI_BYTES
  total                               1     -     171.389  171.389  171.389       -      
    sync_Allgather                    4     -    1.64e-04 6.00e-05 2.10e-05       -      
    MPI_Allgather                     4     -    1.75e-04 6.90e-05 2.40e-05    1.520e+02 
    gmcore_inits                      1     -       0.077    0.077    0.077       -      
    gmcore_run                        1     -     171.226  171.226  171.226       -      
      aaagmcore_run_inits             1     -       0.102    0.102    0.102       -      
*       fill_halo_2d                  3     -    1.17e-03 1.04e-03 4.30e-05       -      
      aaagmcore_main_loop             1     -     171.125  171.125  171.125       -      
*       sync_Allreduce            91638     -       7.382 8.91e-03 5.00e-06       -      
*       MPI_Allreduce             91638     -       0.671 6.84e-03 1.00e-06    1.605e+01 
*       calc_div                     52     -    7.60e-04 2.50e-05 8.00e-06       -      
*       MPI_Barrier                1132     -       0.125 7.90e-03 0.00e+00       -      
*       sync_Bcast                 3719     -       1.583    0.017 6.00e-06       -      
*       MPI_Bcast                  3719     -       0.032 7.63e-03 0.00e+00    5.053e+02 
*       sync_Gatherv               1020     -    9.60e-05 1.00e-06 0.00e+00       -      
*       MPI_Gatherv                1020     -    1.27e-03 5.00e-06 0.00e+00       -      
        aaagmcore_dynamic_core    18000     -     155.836    0.021 7.35e-03       -      
*         fill_halo_3d           756012     -      86.165    0.011 6.00e-06       -      
*           MPI_Sendrecv        1.4e+06     -       8.538 4.92e-03 2.00e-06    3.024e+03 
*           MPI_Isend           1.1e+06     -      23.754 5.16e-03 2.00e-06    6.149e+04 
*           MPI_Irecv           1.1e+06     -       0.367 1.36e-03 0.00e+00    6.149e+04 
*           MPI_Wait            2.2e+06     -      51.124    0.011 0.00e+00       -      
*         calc_dmg                54001     -      23.946 9.01e-03 1.94e-04       -      
*         calc_mf                 54001     -      21.203 8.38e-03 1.57e-04       -      
*         calc_ke                 54001     -       0.832 1.36e-03 8.00e-06       -      
*         calc_pv                 54001     -       8.469 7.38e-03 6.70e-05       -      
            calc_vor              54001     -       0.524 1.36e-03 4.00e-06       -      
*         interp_pv_upwind        54001     -      38.497 6.63e-03 5.78e-04       -      
          calc_grad_mf            54000     -       0.536 1.36e-03 5.00e-06       -      
          calc_coriolis           54000     -       1.380 1.39e-03 1.50e-05       -      
          calc_grad_ke            54000     -       0.524 1.35e-03 4.00e-06       -      
          filter_run_3d          162000     -       5.655 1.41e-03 1.50e-05       -      
          damp_run                18000     -       0.014 1.32e-03 0.00e+00       -      
        aaagmcore_adv_run         18000     -       0.038 2.60e-05 1.00e-06       -      
        aaagmcore_physic_run      18000     -    5.68e-03 3.80e-05 0.00e+00       -      
Overhead sum =      1.83 wallclock seconds
Total calls  = 7.394e+06
thread 0 long name translations (empty when no auto-instrumentation):

Multiple parent info for thread 0:
Columns are count and name for the listed child
Rows are each parent, with their common child being the last entry, which is indented.
Count next to each parent is the number of times it called the child.
Count next to child is total number of times it was called by the listed parents.

       1 total
      37 aaagmcore_run_inits
   91600 aaagmcore_main_loop
   91638   sync_Allreduce

       1 total
      37 aaagmcore_run_inits
   91600 aaagmcore_main_loop
   91638   MPI_Allreduce

       2 gmcore_inits
       6 fill_halo_2d
 1.4e+06 fill_halo_3d
 1.4e+06   MPI_Sendrecv

       1 total
       2 aaagmcore_run_inits
       3   fill_halo_2d

       6 fill_halo_2d
 1.1e+06 fill_halo_3d
 1.1e+06   MPI_Isend

       6 fill_halo_2d
 1.1e+06 fill_halo_3d
 1.1e+06   MPI_Irecv

      12 fill_halo_2d
 2.2e+06 fill_halo_3d
 2.2e+06   MPI_Wait

       3 total
  162003 calc_dmg
  108002 calc_mf
   54001 calc_pv
  108002 interp_pv_upwind
       1 aaagmcore_run_inits
  324000 aaagmcore_dynamic_core
  756012   fill_halo_3d

       2 aaagmcore_run_inits
      50 aaagmcore_main_loop
      52   calc_div

       1 aaagmcore_run_inits
   54000 aaagmcore_dynamic_core
   54001   calc_dmg

       1 aaagmcore_run_inits
   54000 aaagmcore_dynamic_core
   54001   calc_mf

       1 aaagmcore_run_inits
   54000 aaagmcore_dynamic_core
   54001   calc_ke

       1 aaagmcore_run_inits
   54000 aaagmcore_dynamic_core
   54001   calc_pv

       1 aaagmcore_run_inits
   54000 aaagmcore_dynamic_core
   54001   interp_pv_upwind

      32 aaagmcore_run_inits
    1100 aaagmcore_main_loop
    1132   MPI_Barrier

      19 aaagmcore_run_inits
    3700 aaagmcore_main_loop
    3719   sync_Bcast

      19 aaagmcore_run_inits
    3700 aaagmcore_main_loop
    3719   MPI_Bcast

      20 aaagmcore_run_inits
    1000 aaagmcore_main_loop
    1020   sync_Gatherv

      20 aaagmcore_run_inits
    1000 aaagmcore_main_loop
    1020   MPI_Gatherv


Total GPTL memory usage = 26.28 KB
Components:
Hashmem                 = 16.648 KB
Regionmem               = 7.84 KB (papimem portion = 0 KB)
Parent/child arrays     = 0.768 KB
Callstackmem            = 1.024 KB

Thread mapping:
GPTLthreadid[0] = 0
         = 7.84 KB (papimem portion = 0 KB)
Parent/child arrays     = 0.832 KB
Callstackmem            = 1.024 KB

Thread mapping:
GPTLthreadid[0] = 0
